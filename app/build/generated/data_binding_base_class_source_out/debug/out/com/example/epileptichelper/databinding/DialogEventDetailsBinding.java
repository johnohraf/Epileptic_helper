// Generated by view binder compiler. Do not edit!
package com.example.epileptichelper.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.epileptichelper.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogEventDetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView activityLabelTextView;

  @NonNull
  public final TextView activityTextView;

  @NonNull
  public final TextView attackReasonLabelTextView;

  @NonNull
  public final TextView attackReasonTextView;

  @NonNull
  public final TextView attackTypeLabelTextView;

  @NonNull
  public final TextView attackTypeTextView;

  @NonNull
  public final TextView dateTimeLabelTextView;

  @NonNull
  public final TextView dateTimeTextView;

  @NonNull
  public final TextView durationLabelTextView;

  @NonNull
  public final TextView durationTextView;

  @NonNull
  public final TextView noteLabelTextView;

  @NonNull
  public final TextView noteTextView;

  private DialogEventDetailsBinding(@NonNull LinearLayout rootView,
      @NonNull TextView activityLabelTextView, @NonNull TextView activityTextView,
      @NonNull TextView attackReasonLabelTextView, @NonNull TextView attackReasonTextView,
      @NonNull TextView attackTypeLabelTextView, @NonNull TextView attackTypeTextView,
      @NonNull TextView dateTimeLabelTextView, @NonNull TextView dateTimeTextView,
      @NonNull TextView durationLabelTextView, @NonNull TextView durationTextView,
      @NonNull TextView noteLabelTextView, @NonNull TextView noteTextView) {
    this.rootView = rootView;
    this.activityLabelTextView = activityLabelTextView;
    this.activityTextView = activityTextView;
    this.attackReasonLabelTextView = attackReasonLabelTextView;
    this.attackReasonTextView = attackReasonTextView;
    this.attackTypeLabelTextView = attackTypeLabelTextView;
    this.attackTypeTextView = attackTypeTextView;
    this.dateTimeLabelTextView = dateTimeLabelTextView;
    this.dateTimeTextView = dateTimeTextView;
    this.durationLabelTextView = durationLabelTextView;
    this.durationTextView = durationTextView;
    this.noteLabelTextView = noteLabelTextView;
    this.noteTextView = noteTextView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogEventDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogEventDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_event_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogEventDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activityLabelTextView;
      TextView activityLabelTextView = ViewBindings.findChildViewById(rootView, id);
      if (activityLabelTextView == null) {
        break missingId;
      }

      id = R.id.activityTextView;
      TextView activityTextView = ViewBindings.findChildViewById(rootView, id);
      if (activityTextView == null) {
        break missingId;
      }

      id = R.id.attackReasonLabelTextView;
      TextView attackReasonLabelTextView = ViewBindings.findChildViewById(rootView, id);
      if (attackReasonLabelTextView == null) {
        break missingId;
      }

      id = R.id.attackReasonTextView;
      TextView attackReasonTextView = ViewBindings.findChildViewById(rootView, id);
      if (attackReasonTextView == null) {
        break missingId;
      }

      id = R.id.attackTypeLabelTextView;
      TextView attackTypeLabelTextView = ViewBindings.findChildViewById(rootView, id);
      if (attackTypeLabelTextView == null) {
        break missingId;
      }

      id = R.id.attackTypeTextView;
      TextView attackTypeTextView = ViewBindings.findChildViewById(rootView, id);
      if (attackTypeTextView == null) {
        break missingId;
      }

      id = R.id.dateTimeLabelTextView;
      TextView dateTimeLabelTextView = ViewBindings.findChildViewById(rootView, id);
      if (dateTimeLabelTextView == null) {
        break missingId;
      }

      id = R.id.dateTimeTextView;
      TextView dateTimeTextView = ViewBindings.findChildViewById(rootView, id);
      if (dateTimeTextView == null) {
        break missingId;
      }

      id = R.id.durationLabelTextView;
      TextView durationLabelTextView = ViewBindings.findChildViewById(rootView, id);
      if (durationLabelTextView == null) {
        break missingId;
      }

      id = R.id.durationTextView;
      TextView durationTextView = ViewBindings.findChildViewById(rootView, id);
      if (durationTextView == null) {
        break missingId;
      }

      id = R.id.noteLabelTextView;
      TextView noteLabelTextView = ViewBindings.findChildViewById(rootView, id);
      if (noteLabelTextView == null) {
        break missingId;
      }

      id = R.id.noteTextView;
      TextView noteTextView = ViewBindings.findChildViewById(rootView, id);
      if (noteTextView == null) {
        break missingId;
      }

      return new DialogEventDetailsBinding((LinearLayout) rootView, activityLabelTextView,
          activityTextView, attackReasonLabelTextView, attackReasonTextView,
          attackTypeLabelTextView, attackTypeTextView, dateTimeLabelTextView, dateTimeTextView,
          durationLabelTextView, durationTextView, noteLabelTextView, noteTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
