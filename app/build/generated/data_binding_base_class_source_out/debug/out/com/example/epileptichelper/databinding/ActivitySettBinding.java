// Generated by view binder compiler. Do not edit!
package com.example.epileptichelper.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Spinner;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.epileptichelper.R;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final Spinner spinnerLanguage;

  @NonNull
  public final Switch switchTheme;

  @NonNull
  public final TextView textClearDatabase;

  @NonNull
  public final TextView textDarkMode;

  @NonNull
  public final TextView textLanguage;

  @NonNull
  public final TextView textSaveSeizures;

  @NonNull
  public final TextView textSupport;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivitySettBinding(@NonNull ConstraintLayout rootView, @NonNull ConstraintLayout main,
      @NonNull Spinner spinnerLanguage, @NonNull Switch switchTheme,
      @NonNull TextView textClearDatabase, @NonNull TextView textDarkMode,
      @NonNull TextView textLanguage, @NonNull TextView textSaveSeizures,
      @NonNull TextView textSupport, @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.main = main;
    this.spinnerLanguage = spinnerLanguage;
    this.switchTheme = switchTheme;
    this.textClearDatabase = textClearDatabase;
    this.textDarkMode = textDarkMode;
    this.textLanguage = textLanguage;
    this.textSaveSeizures = textSaveSeizures;
    this.textSupport = textSupport;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sett, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.spinnerLanguage;
      Spinner spinnerLanguage = ViewBindings.findChildViewById(rootView, id);
      if (spinnerLanguage == null) {
        break missingId;
      }

      id = R.id.switchTheme;
      Switch switchTheme = ViewBindings.findChildViewById(rootView, id);
      if (switchTheme == null) {
        break missingId;
      }

      id = R.id.textClearDatabase;
      TextView textClearDatabase = ViewBindings.findChildViewById(rootView, id);
      if (textClearDatabase == null) {
        break missingId;
      }

      id = R.id.textDarkMode;
      TextView textDarkMode = ViewBindings.findChildViewById(rootView, id);
      if (textDarkMode == null) {
        break missingId;
      }

      id = R.id.textLanguage;
      TextView textLanguage = ViewBindings.findChildViewById(rootView, id);
      if (textLanguage == null) {
        break missingId;
      }

      id = R.id.textSaveSeizures;
      TextView textSaveSeizures = ViewBindings.findChildViewById(rootView, id);
      if (textSaveSeizures == null) {
        break missingId;
      }

      id = R.id.textSupport;
      TextView textSupport = ViewBindings.findChildViewById(rootView, id);
      if (textSupport == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivitySettBinding((ConstraintLayout) rootView, main, spinnerLanguage,
          switchTheme, textClearDatabase, textDarkMode, textLanguage, textSaveSeizures, textSupport,
          toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
